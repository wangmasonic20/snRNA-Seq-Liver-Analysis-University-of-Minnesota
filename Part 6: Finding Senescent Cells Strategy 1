genes_category1 <- c( "Acvr1b", "Ang", "Angpt1", "Angptl4", "Areg", "Axl", "Bex3", "Bmp2", "Bmp6", "C3",
                      "Ccl1", "Ccl2", "Ccl20", "Ccl24", "Ccl26", "Ccl3", "Ccl4", "Ccl5", "Ccl7", "Ccl8", "Cd55", "Cd9",
                      "Csf1", "Csf2", "Csf2rb", "Cst10", "Ctnnb1", "Ctsb", "Cxcl1", "Cxcl10", "Cxcl12", "Cxcl16", "Cxcl2",
                      "Cxcl3", "Cxcr2", "Dkk1", "Edn1", "Egf", "Egfr", "Ereg", "Esm1", "Ets2", "Fas", "Fgf1", "Fgf2",
                      "Fgf7", "Gdf15", "Gem", "Gmfg", "Hgf", "Hmgb1", "Icam1", "Icam5", "Igf1", "Igfbp1", "Igfbp2",
                      "Igfbp3", "Igfbp4", "Igfbp5", "Igfbp6", "Igfbp7", "Il10", "Il13", "Il15", "Il18", "Il1a", "Il1b",
                      "Il2", "Il6", "Il6st", "Il7", "Inha", "Iqgap2", "Itga2", "Itpka", "Jun", "Kitl", "Lcp1", "Mif",
                      "Mmp10", "Mmp12", "Mmp13", "Mmp14", "Mmp2", "Mmp3", "Mmp9", "Nap1l4", "Nrg1", "Pappa", "Pecam1",
                      "Pgf", "Pigf", "Plat", "Plau", "Plaur", "Ptbp1", "Ptger2", "Ptges", "Rps6ka5", "Scamp4", "Selplg",
                      "Sema3f", "Serpinb3a", "Serpine1", "Serpine2", "Spp1", "Spx", "Timp2", "Tnf", "Tnfrsf11b",
                      "Tnfrsf1a", "Tnfrsf1b", "Tubgcp2", "Vegfa", "Vegfc", "Vgf", "Wnt16", "Wnt2"  ,"Aldh1a3", "Ang-2", "Angptl8", "Apobec3", "Arhgef3", "Atm", "Btg2", "Ccl11", "Ccl13", "Ccl16",
                      "Ccl22", "Ccl25", "Ccl9", "Cd82", "Cpe", "Crlf1", "Csf3", "Ctsd", "Ctsz", "Cxcl11", "Cxcl13",
                      "Cxcl14", "Cxcl15", "Cxcl8", "Ddit4", "Dram1", "Eda2r", "Enc1", "Epha2", "Fdxr", "Fn1", "Gadd45a",
                      "Gata4", "Gbp2", "Glb1", "Gsn", "Hpse", "Icam3", "Ier5", "Ifi203", "Ifi44", "Ifih1", "Ifit1",
                      "Ifng", "Irf1", "Irf7", "Isg15", "Lamb1", "Laptm5", "Lgals3", "Lgals3bp", "Mme", "Mmp1",
                      "Ms4a4a", "Mx2", "Nampt", "Ndn", "Ngf", "Phlda3", "Plk2", "Pmaip1", "Ppm1d", "Prdm1", "Ptgs2",
                      "Rab31", "Rras", "Rtp4", "Serpinb2", "Serping1", "Sertad1", "Sesn2", "Slc15a3", "Slc25a28",
                      "Smurf2", "Sparc", "Stat1", "Susd6", "Tgfa", "Tgfb1", "Tgfb2", "Timp1", "Tm7sf3", "Tnfaip2",
                      "Tnfrsf10b", "Tnfrsf10C", "Tnfrsf23", "Trp53", "Trp53inp1", "Tspan11", "Usp18", "Vcam1",
                      "Zc3hav1", "Zmat3", "Cd26", "Cd36", "Cd264", "Notch1", "Notch3", "B2m", "Cd148", "Bmp4", "Itgb3"
)
genes_category3 <- c("Bcl2l1", "Bcl2l2", "Mcl1", "Bcl2", "Bcl2l", "Bclx", "Bclxl")
genes_category2 <- c("Cdkn1a", "Cdkn2a", "Cdkn2b", "Cdkn2d", "Cdkn1b", "Cdkn2c", "Cdkn1c","Ccnd2")





Endothelial.2 = subset(Endothelial, type == "2_Years_Wt")
Endothelial.2@active.assay = "RNA"
Endothelial.2 = SplitObject(Endothelial.2, split.by = "orig.ident")
genes = c(genes_category1, genes_category2, genes_category3)
for (i in 1:length(Endothelial.2)) {
  Endothelial.2[[i]] <- NormalizeData(Endothelial.2[[i]])
  Endothelial.2[[i]] <- FindVariableFeatures(Endothelial.2[[i]], selection.method = "vst",
                                             nfeatures = length(genes))
  # Optionally restrict variable features to your genes
  VariableFeatures(Endothelial.2[[i]]) <- genes
}

common_genes <- Reduce(intersect, lapply(Endothelial.2, VariableFeatures))
anchors <- FindIntegrationAnchors(object.list = Endothelial.2, anchor.features = common_genes, reference = 1)
Endothelial_2_Years <- IntegrateData(anchorset = anchors)
DefaultAssay(Endothelial_2_Years) <- "integrated"
Endothelial_2_Years <- ScaleData(Endothelial_2_Years)
Endothelial_2_Years <- RunPCA(Endothelial_2_Years)
Endothelial_2_Years <- RunHarmony(Endothelial_2_Years, "orig.ident")
Endothelial_2_Years <- FindNeighbors(Endothelial_2_Years, dims = 1:15, reduction = "harmony")
Endothelial_2_Years <- FindClusters(Endothelial_2_Years, resolution = 0.6)
Endothelial_2_Years  = RunUMAP(Endothelial_2_Years, reduction = "harmony", dims = 1:15)
DimPlot(Endothelial_2_Years, label = T, raster = F)





Endothelial.young = subset(Endothelial, type == "8_Weeks")
Endothelial.young@active.assay = "RNA"
Endothelial.young = SplitObject(Endothelial.young, split.by = "orig.ident")
genes = c(genes_category1, genes_category2, genes_category3)
for (i in 1:length(Endothelial.young)) {
  Endothelial.young[[i]] <- NormalizeData(Endothelial.young[[i]])
  Endothelial.young[[i]] <- FindVariableFeatures(Endothelial.young[[i]], selection.method = "vst",
                                                 nfeatures = length(genes))
  # Optionally restrict variable features to your genes
  VariableFeatures(Endothelial.young[[i]]) <- genes
}
common_genes <- Reduce(intersect, lapply(Endothelial.young, VariableFeatures))
anchors <- FindIntegrationAnchors(object.list = Endothelial.young, anchor.features = common_genes, reference = 1)
Endothelial.integrated_young <- IntegrateData(anchorset = anchors)
DefaultAssay(Endothelial.integrated_young) <- "integrated"
Endothelial.integrated_young <- ScaleData(Endothelial.integrated_young)
Endothelial.integrated_young <- RunPCA(Endothelial.integrated_young)
Endothelial.integrated_young <- RunHarmony(Endothelial.integrated_young, "orig.ident")
Endothelial.integrated_young <- FindNeighbors(Endothelial.integrated_young, dims = 1:15, reduction = "harmony")
Endothelial.integrated_young <- FindClusters(Endothelial.integrated_young, resolution = 0.6)
Endothelial.integrated_young  = RunUMAP(Endothelial.integrated_young, reduction = "harmony", dims = 1:15)
Endothelial.integrated_young = RunTSNE(Endothelial.integrated_young, label = T)
DimPlot(Endothelial_2_Years, label = T, raster = F, pt.size = 1) + DimPlot(Endothelial.integrated_young, label = T, pt.size = 1)

table(Endothelial_2_Years@active.ident)
table(Endothelial.integrated_young@active.ident)

